# Generated by Django 5.2.4 on 2025-08-17 23:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(help_text="Parent's phone number in Ghana format.", max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number (e.g., +233241234567 or 0241234567)', regex='^(\\+233|0)[2-9][0-9]{8}$')])),
                ('verified', models.BooleanField(default=False, help_text='Indicates if the parent has completed phone verification.')),
                ('is_primary', models.BooleanField(default=True, help_text='Indicates if this is the primary contact for students.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Profile creation timestamp.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp.')),
                ('user', models.OneToOneField(help_text="Linked user account (must have role='parent').", limit_choices_to={'role': 'parent'}, on_delete=django.db.models.deletion.CASCADE, related_name='parent_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parent',
                'verbose_name_plural': 'Parents',
                'ordering': ['user__first_name', 'user__last_name'],
                'indexes': [models.Index(fields=['phone_number'], name='Parent_pare_phone_n_c51d14_idx'), models.Index(fields=['verified'], name='Parent_pare_verifie_840f6f_idx'), models.Index(fields=['created_at'], name='Parent_pare_created_ccb3e3_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('phone_number', ''), _negated=True), name='parent_phone_not_empty')],
            },
        ),
    ]
